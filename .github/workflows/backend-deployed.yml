name: Deploy Node Backend to EC2

on:
  push:
    branches:
      - main  # deploy on push to main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.1
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Copy project to EC2
        run: |
          scp -r ./ ubuntu@${{ secrets.EC2_PUBLIC_IP }}:~/backend

      - name: Build and run Docker on EC2
        run: |
          ssh ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            cd ~/backend

            # Create .env dynamically from GitHub Secrets
            cat <<EOT > .env
MONGO_URI=${{ secrets.MONGO_URI }}
CLOUD_NAME=${{ secrets.CLOUD_NAME }}
API_KEY=${{ secrets.API_KEY }}
API_SECRET=${{ secrets.API_SECRET }}
SMTP_USER=${{ secrets.SMTP_USER }}
SMTP_PASS=${{ secrets.SMTP_PASS }}
SMTP_HOST=${{ secrets.SMTP_HOST }}
SMTP_PORT=${{ secrets.SMTP_PORT }}
ROOT_URL=${{ secrets.ROOT_URL }}
JWT_ACCESS_SECRET=${{ secrets.JWT_ACCESS_SECRET }}
JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }}
GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
EOT

            # Build Docker image
            docker build -t sportify-backend .

            # Stop and remove existing container if running
            docker stop sportify-container || true
            docker rm sportify-container || true

            # Run Docker container
            docker run -d -p 8000:8000 --name sportify-container --env-file .env sportify-backend
          EOF
